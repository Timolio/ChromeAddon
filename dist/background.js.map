{"version":3,"file":"background.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://chromeaddon/./src/background.ts"],"sourcesContent":["\"use strict\";\nfunction sendMessageToActiveTab(message) {\n    chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n        if (tabs[0]?.id) {\n            chrome.tabs.sendMessage(tabs[0]?.id, message);\n        }\n    });\n}\nchrome.alarms.onAlarm.addListener(alarm => {\n    if (alarm.name === 'showPopup') {\n        sendMessageToActiveTab({ action: 'showPopup' });\n    }\n});\nchrome.tabs.onActivated.addListener(() => {\n    chrome.alarms.get('showPopup', alarm => {\n        if (!alarm) {\n            sendMessageToActiveTab({ action: 'showPopup' });\n        }\n        else {\n            sendMessageToActiveTab({ action: 'removePopup' });\n        }\n    });\n});\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.action === 'checkAlarm') {\n        chrome.alarms.get('showPopup', alarm => {\n            console.log(alarm);\n            sendResponse({ alarmExists: !!alarm });\n        });\n        return true;\n    }\n    if (message.action === 'setAlarm') {\n        chrome.alarms.create('showPopup', { delayInMinutes: 3 });\n        chrome.storage.local.remove('currentWord');\n        sendResponse('alarm set');\n    }\n});\n"],"names":[],"sourceRoot":""}